name: Dynamic Azure OIDC + Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write   # required for OIDC login
  contents: read    # required to checkout code

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Login to Azure using bootstrap service principal
      - name: Login with bootstrap identity
        uses: azure/login@v2
        with:
          auth-type: service-principal
          client-id: ${{ secrets.AZURE_BOOTSTRAP_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_BOOTSTRAP_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_BOOTSTRAP_CLIENT_SECRET }}
          subscription-id: ${{ secrets.AZURE_BOOTSTRAP_SUBSCRIPTION_ID }}

      # 3Ô∏è‚É£ Dynamically create OIDC app registration & federated credential
      - name: Dynamically create OIDC app registration
        id: oidc-setup
        run: |
          set -e
          APP_NAME="github-actions-${GITHUB_REPOSITORY//\//-}"
          GITHUB_REPO=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)

          echo "üîç Checking if app registration $APP_NAME exists..."
          APP_ID=$(az ad app list --display-name "$APP_NAME" --query "[0].appId" -o tsv)
          if [ -z "$APP_ID" ]; then
            echo "‚öôÔ∏è Creating new app registration..."
            APP_ID=$(az ad app create --display-name "$APP_NAME" --query appId -o tsv)
            az ad sp create --id $APP_ID
          else
            echo "‚úÖ App already exists with ID $APP_ID"
          fi

          echo "üîë Assigning Contributor role..."
          az role assignment create --assignee $APP_ID \
            --role contributor \
            --scope /subscriptions/${{ secrets.AZURE_BOOTSTRAP_SUBSCRIPTION_ID }} || true

          echo "üîó Adding federated credential..."
          az ad app federated-credential create \
            --id $APP_ID \
            --parameters "{
              \"name\": \"${GITHUB_REPO}-main\",
              \"issuer\": \"https://token.actions.githubusercontent.com\",
              \"subject\": \"repo:${GITHUB_REPOSITORY}:ref:refs/heads/main\",
              \"description\": \"GitHub OIDC for ${GITHUB_REPO} main branch\",
              \"audiences\": [\"api://AzureADTokenExchange\"]
            }" || true

          echo "client-id=$APP_ID" >> $GITHUB_OUTPUT
          echo "tenant-id=${{ secrets.AZURE_BOOTSTRAP_TENANT_ID }}" >> $GITHUB_OUTPUT
          echo "subscription-id=${{ secrets.AZURE_BOOTSTRAP_SUBSCRIPTION_ID }}" >> $GITHUB_OUTPUT

      # 4Ô∏è‚É£ Login to Azure via OIDC dynamically
      - name: Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ steps.oidc-setup.outputs.client-id }}
          tenant-id: ${{ steps.oidc-setup.outputs.tenant-id }}
          subscription-id: ${{ steps.oidc-setup.outputs.subscription-id }}
          auth-type: oidc

      # 5Ô∏è‚É£ Deploy to Azure Web App
      - name: Deploy to Azure Web App
        run: |
          APP_NAME=app-service-taskGen-dev
          RESOURCE_GROUP=<YOUR_RESOURCE_GROUP>
          zip -r release.zip . > /dev/null
          az webapp deploy \
            --name $APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --src-path release.zip \
            --type zip
